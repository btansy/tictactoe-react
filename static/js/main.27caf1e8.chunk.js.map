{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","move","squares","Array","fill","squaresHistory","xIsNext","i","this","slice","calculateWinner","setState","onToggleX","extraClass","handleClick","status","winner","renderSquare","data-tip","disabled","handleUndo","icon","faUndo","size","place","type","effect","handleRedo","faRedo","handleNewGame","faFile","React","Component","Game","x","classes","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27caf1e8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ReactTooltip from 'react-tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile, faUndo, faRedo } from '@fortawesome/free-solid-svg-icons';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            move: 0,\n            squares: Array(9).fill(null),\n            squaresHistory: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        const squaresHistory = this.state.squaresHistory.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        let x = 'X';\n        let o = 'O';\n\n        let move = this.state.move;\n        squaresHistory[move] = this.state.squares;\n        move++;\n        squares[i] = this.state.xIsNext ? x : o;\n\n        this.setState({\n            move: move,\n            squares: squares,\n            squaresHistory: squaresHistory,\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleUndo() {\n        let move = this.state.move;\n\n        const squaresHistory = this.state.squaresHistory.slice();\n        squaresHistory[move] = this.state.squares;\n\n        --move;\n        this.setState({\n            move: move,\n            squares: this.state.squaresHistory[move],\n            squaresHistory: squaresHistory,\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleRedo() {\n        let move = this.state.move;\n        move++;\n        this.setState({\n            move: move,\n            squares: this.state.squaresHistory[move],\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleNewGame() {\n        this.setState({\n            move: 0,\n            squares: Array(9).fill(null),\n            squaresHistory: Array(9).fill(null),\n            xIsNext: true,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                extraClass={this.state.xIsNext ? 'revert' : ''}\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n                <div className=\"icons\">\n                    <button\n                        data-tip=\"Undo\"\n                        className=\"function-button\"\n                        disabled={this.state.move === 0}\n                        onClick={() => this.handleUndo()}>\n                        <FontAwesomeIcon icon={faUndo} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\" />\n                    <button\n                        data-tip=\"Redo\"\n                        className=\"function-button\"\n                        disabled={this.state.squaresHistory[this.state.move + 1] === null}\n                        onClick={() => this.handleRedo()}>\n                        <FontAwesomeIcon icon={faRedo} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\" />\n                    <button\n                        data-tip=\"New Game\"\n                        className=\"function-button\"\n                        onClick={() => this.handleNewGame()}>\n                        <FontAwesomeIcon icon={faFile} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"warning\" effect=\"float\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            classes: 'game',\n        };\n    }\n\n    onToggleX = x => {\n        this.setState({\n            classes: x ? 'revert game' : 'game',\n        });\n    };\n    render() {\n        return (\n            <div className={this.state.classes}>\n                <div className=\"game-board\">\n                    <Board onToggleX={this.onToggleX} />\n                </div>\n            </div>\n        );\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}