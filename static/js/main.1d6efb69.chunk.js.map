{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","xIs","onToggleX","extraClass","handleClick","status","winner","renderSquare","React","Component","Game","x","classes","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oNAIA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,O,IAKbC,E,YACF,WAAYJ,GAAQ,IAAD,8BACf,4CAAMA,KACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,yEAQPC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QACnC,IAAIC,EAAgBP,KAAYA,EAAQI,GAAxC,CAKAJ,EAAQI,GAAKC,KAAKN,MAAMI,QAFhB,IACA,IAGRE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,UAEzB,IAAIM,EAAMJ,KAAKN,MAAMI,QACrBE,KAAKX,MAAMgB,UAAUD,M,mCAGZL,GAAI,IAAD,OACZ,OACI,kBAACX,EAAD,CACIkB,WAAYN,KAAKN,MAAMI,QAAU,SAAW,GAC5CN,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKgB,YAAYR,Q,+BAMxC,IACIS,EADEC,EAASP,EAAgBF,KAAKN,MAAMC,SAO1C,OAJIa,EADAC,EACS,WAAaA,EAEb,iBAAmBT,KAAKN,MAAMI,QAAU,IAAM,KAGvD,6BACI,yBAAKR,UAAU,UAAUkB,GACzB,yBAAKlB,UAAU,aACVU,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,IAEvB,yBAAKpB,UAAU,aACVU,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,IAEvB,yBAAKpB,UAAU,aACVU,KAAKU,aAAa,GAClBV,KAAKU,aAAa,GAClBV,KAAKU,aAAa,S,GA5DnBC,IAAMC,WAmEpBC,E,YACF,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KAMVgB,UAAY,SAAAS,GACR,EAAKX,SAAS,CACVY,QAASD,EAAI,cAAgB,UAPjC,EAAKpB,MAAQ,CACTqB,QAAS,QAHE,E,sEAaf,OACI,yBAAKzB,UAAWU,KAAKN,MAAMqB,SACvB,yBAAKzB,UAAU,cACX,kBAACG,EAAD,CAAOY,UAAWL,KAAKK,kB,GAjBxBM,IAAMC,WAuBzB,SAASV,EAAgBP,GAWrB,IAVA,IAAMqB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFjB,EAAI,EAAGA,EAAIiB,EAAMC,OAAQlB,IAAK,CAAC,IAAD,cACjBiB,EAAMjB,GADW,GAC5BmB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIzB,EAAQuB,IAAMvB,EAAQuB,KAAOvB,EAAQwB,IAAMxB,EAAQuB,KAAOvB,EAAQyB,GAClE,OAAOzB,EAAQuB,GAGvB,OAAO,KAEXG,IAASC,OAAO,kBAACT,EAAD,MAAUU,SAASC,eAAe,U","file":"static/js/main.1d6efb69.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        let x = 'X';\n        let o = 'O';\n        squares[i] = this.state.xIsNext ? x : o;\n\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n        let xIs = this.state.xIsNext;\n        this.props.onToggleX(xIs);\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                extraClass={this.state.xIsNext ? 'revert' : ''}\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            classes: 'game'\n        }\n    }\n\n    onToggleX = x => {\n        this.setState({\n            classes: x ? 'revert game' : 'game'\n        });\n    };\n    render() {\n        return (\n            <div className={this.state.classes}>\n                <div className=\"game-board\">\n                    <Board onToggleX={this.onToggleX} />\n                </div>\n            </div>\n        );\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}